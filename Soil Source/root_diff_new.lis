Silverfrost FTN95/x64 Ver 8.50.0  root_diff_new.for  Sun Oct 27 15:06:02 2019

Compiler used    [C:\Program Files (x86)\Silverfrost\FTN95\FTN95.EXE]
Salflibc path    [C:\Program Files (x86)\Silverfrost\FTN95\salflibc.dll]
Salflibc version [21.4.29.16]
Compiler options in effect:
    64;BINARY;CFPP;ERROR_NUMBERS;FIXED_FORMAT;FPP;IGNORE;LIST;
    LIST_INSERT_FILES;NO_BANNER;TABS;UNLIMITED_ERRORS;VS7;XREF;

   0001         subroutine Root_Diff_New()                                                       AT 0
   0002         Include 'Public.ins'                                                             AT d0
 1/0001   c  dt ToDo - simplyfy common blocks so only variables needed in plant model            AT d0
 1/0002   c dt ToDo May 2016 added VarBW_old for debugging purposes can be removed later         AT d0
 1/0003   c   will be transferred.                                                               AT d0
 1/0004         Parameter (NumNPD=4000, NumElD=3500, NumBPD=600, NSeepD = 2,                     AT d0
 1/0005        &           NumSPD= 30, NumSD =10, NDrainD=2,NumDR=30,                            AT d0
 1/0006        &           NumGD = 3, NumPlD=100,                                                AT d0
 1/0007        &           NMatD=15,MNorth=4,                                                    AT d0
 1/0008        &           NumModD=20, MBandD=15,  NumSurfDatD=3+NumGD+NumSD)                    AT d0
 1/0009                                                                                          AT d0
 1/0010                                                                                          AT d0
 1/0011         Double precision Time,Step,tNext,                                                AT d0
 1/0012        &             dtOpt,dtMin,dMul1,dMul2,dtMx,tTDB,tFin,tatm                         AT d0
 1/0013         Double precision  A1,B1,VRV,RES,RQI,RQ,QI,QQ,RQIDOT                              AT d0
 1/0014         Double precision  ECNVRG, RCNVRG,ACNVRG                                          AT d0
 1/0015         Double precision Starter, TimeStep                                               AT d0
 1/0016                                                                                          AT d0
 1/0017         Real BlkDn, FracSind, FracClay, FracOM, hCritS,hCritA                            AT d0
 1/0018         Real nodeArea                                                                    AT d0
 1/0019         Integer CodeW,CodeS,CodeT,CodeG,errPlant                                         AT d0
 1/0020         Integer MaxItO, OutPutSoilNo, OutPutSoilYes                                      AT d0
 1/0021         Logical*1 lOrt                                                                   AT d0
 1/0022         Integer DailyOutput, HourlyOutput,RunFlag,                                       AT d0
 1/0023        &  DailyWeather,HourlyWeather,ITIME, IDAWN, IDUSK,                                AT d0
 1/0024        &  beginDay, sowingDay, endDay,year                                               AT d0
 1/0025                                                                                          AT d0
 1/0026         character WeatherFile*132, TimeFile*132, BiologyFile*132,                        AT d0
 1/0027        &          ClimateFile*132, NitrogenFile*132, SoluteFile*132,                     AT d0
 1/0028        &          SoilFile*132,                                                          AT d0
 1/0029        &          ManagementFile*132,DripFile*132,                                       AT d0
 1/0030        &          WaterFile*132, WaterBoundaryFile*132,                                  AT d0
 1/0031        &          PlantGraphics*132,InitialsFile*132,  VarietyFile*132,                  AT d0
 1/0032        &          NodeGraphics*132,ElemGraphics*132,                                     AT d0
 1/0033        &          NodeGeomFile*132,                                                      AT d0
 1/0034        &          GeometryFile*132,SurfaceGraphics*132,                                  AT d0
 1/0035        &          FluxGraphics*132,MassBalanceFile*132,                                  AT d0
 1/0036        &          MassBalanceFileOut*132,LeafGraphics*132,                               AT d0
 1/0037        &          RunFile*132                                                            AT d0
 1/0038         Common /grid_public/  NumNP, NumEl, IJ, KAT, MBand,Nmat,                         AT d0
 1/0039        &        KX(NumElD,4),x(NumNPD), y(NumNPD), Area(NumElD),                         AT d0
 1/0040        &        nodeArea(NumNPD)                                                         AT d0
 1/0041         Common /nodal_public/ NumSol,NumG,ListN(NumNPD),ListNE(NumNPD),                  AT d0
 1/0042        &       MatNumN(NumNPD),hNew(NumNPD),ThNew(NumNPD), Vx(NumNPD),                   AT d0
 1/0043        &       Vz(NumNPD),Q(NumNPD), Conc(NumNPD,NumSD),                                 AT d0
 1/0044        &       g(NumNPD,NumGD), Tmpr(NumNPD), Con(NumNPD),TcsXX(NumNPD),                 AT d0
 1/0045        &       RO(NumNPD), hNew_org(NumNPD),QAct(NumNPD),ThetaAvail,                     AT d0
 1/0046        &       ThetaFull, ThAvail(NumNPD),ThFull(NMAtD),  lOrt                           AT d0
 1/0047         Common /elem_public/  MatNumE(NumElD),Sink(NumNPD),                              AT d0
 1/0048        &       cSink(NumNPD,NumSD),gSink(NumNPD,NumGD),tSink(NumNPD),                    AT d0
 1/0049        &       RTWT(NumNPD),RUTDEN(NumNPD),RMassM(NumNPD),RDenM(NumNPD),                 AT d0
 1/0050        &       RMassY(NumNPD), RDenY(NumNPD)                                             AT d0
 1/0051         Common /bound_public/ NumBP, NSurf, NVarBW,NVarBS,NVarBT,NVarBG,                 AT d0
 1/0052        &       NumSurfDat, NSeep, NSP(NSeepD), NP(NSeepD,NumSPD),                        AT d0
 1/0053        &       NDrain,NDR(NDrainD),ND(NDrainD,NumDR),                                    AT d0
 1/0054        &       KXB(NumBPD),                                                              AT d0
 1/0055        &       CodeW(NumNPD),CodeS(NumNPD),CodeT(NumNPD),CodeG(NumNPD),                  AT d0
 1/0056        &       PCodeW(NumNPD),Width(NumBPD),                                             AT d0
 1/0057        &       VarBW(NumBPD,3),VarBW_Old(NumBPD,3),                                      AT d0
 1/0058        &       VarBS(NumBPD,NumSD),VarBT(NumBPD,4),                                      AT d0
 1/0059        &       VarBG(NumBPD,NumGD,3),EO,Tpot                                             AT d0
 1/0060         Common /time_public/tNext(NumModD),dtMx(4),Time,Step,dtOpt,                      AT d0
 1/0061        &        dtMin, dMul1, dMul2,  tTDB(4), Tfin,tAtm, Tinit,                         AT d0
 1/0062        &        lInput,Iter,DailyOutput,HourlyOutput,RunFlag,                            AT d0
 1/0063        &          DailyWeather,HourlyWeather,                                            AT d0
 1/0064        &          beginDay, sowingDay, endDay,                                           AT d0
 1/0065        &          OutputSoilNo, OutPutSoilYes, Year,                                     AT d0
 1/0066        &           iTime, iDawn, iDusk, dumpad, TimeStep                                 AT d0
 1/0067         Common /module_public/  NumMod,Movers(4), NShoot                                 AT d0
 1/0068         Common /error_public/errPlant                                                    AT d0
 1/0069         Common /Solver_public/IAD(MBandD,NumNPD), IADN(NumNPD),                          AT d0
 1/0070        &        IADD(NumNPD),A1(MBandD,NumNPD),B1(NumNPD),                               AT d0
 1/0071        &        VRV(NumNPD),RES(NumNPD),RQI(NumNPD,MNorth),                              AT d0
 1/0072        &        QQ(NumNPD), RQ(NumNPD),QI(NumNPD,MNorth), RQIDOT(MNorth)                 AT d0
 1/0073                                                                                          AT d0
 1/0074         Common /Initvar/ ECNVRG, RCNVRG, ACNVRG, MaxItO,EPSI_Heat,                       AT d0
 1/0075        &                 EPSI_Solute, hCritS, hCritA                                     AT d0
 1/0076                                                                                          AT d0
 1/0077         Common /DataFilenames/ Starter, WeatherFile, TimeFile,                           AT d0
 1/0078        &          BiologyFile,ClimateFile, NitrogenFile, SoluteFile,                     AT d0
 1/0079        &          SoilFile,                                                              AT d0
 1/0080        &          ManagementFile,DripFile,                                               AT d0
 1/0081        &          WaterFile, WaterBoundaryFile,                                          AT d0
 1/0082        &          PlantGraphics,InitialsFile,VarietyFile,                                AT d0
 1/0083        &          NodeGraphics,ElemGraphics,NodeGeomFile,                                AT d0
 1/0084        &          GeometryFile,SurfaceGraphics,                                          AT d0
 1/0085        &          FluxGraphics, MassBalanceFile,MassBalanceFileOut,                      AT d0
 1/0086        &          LeafGraphics,RunFile                                                   AT d0
 1/0087                                                                                          AT d0
 1/0088   c the following blocks are not passed to the crop model                                AT d0
 1/0089         Common /Nodal_pub_Aux/ ROForInfil(NumBPD)                                        AT d0
 1/0090                                                                                          AT d0
 1/0091         Common /Materials/BlkDn(NMatD),FracSind(NMatD), FracClay(NMatD),                 AT d0
 1/0092        &           FracOM(NMatD),TUpperLimit(NMatD), TLowerLimit(NMatD)                  AT d0
   0003         Include 'puplant.ins'                                                            AT d0
 1/0001                                                                                          AT d0
 1/0002         REAL*8 PCRL, PCRQ,PCRS,ET_demand,LCAI,COVER,CONVR                                AT d0
 1/0003         Real*8 HourlyCarboUsed                                                           AT d0
 1/0004         REAL*4 SHADE,HEIGHT,LAI,AWUPS,NitroDemand,NDemandError                           AT d0
 1/0005         REAL LAREAT, MaxRootDepth, InitialRootCarbo                                      AT d0
 1/0006         integer isGerminated, isEmerged                                                  AT d0
 1/0007                                                                                          AT d0
 1/0008   C includes variables shared with crop model                                            AT d0
 1/0009         Common /ShootR/   PCRL,PCRQ,PCRS,HourlyCarboUsed, ET_demand,                     AT d0
 1/0010        &                  LCAI,COVER,CONVR,                                              AT d0
 1/0011        &                  MaxRootDepth,SHADE,HEIGHT,LAI,AWUPS,                           AT d0
 1/0012        &                  NitroDemand,xBSTEM,yBSTEM,SGT,PSIM,                            AT d0
 1/0013        &                  LAREAT,POPROW,ROWSP,ROWANG,PopArea,                            AT d0
 1/0014        &                  CEC,EORSCS,AWUPSS,SOLRAD,                                      AT d0
 1/0015        &                  Total_Eor,Total_Pcrs,sincrsink,PSILD,                          AT d0
 1/0016        &                  OSMFAC,EOMULT,PSIL_,NDemandError,                              AT d0
 1/0017        &                  CumulativeNDemandError,TotalRootWeight,                        AT d0
 1/0018        &                  InitialRootCarbo,                                              AT d0
 1/0019        &                  ConstI(2),constK(2), Cmin0(2),                                 AT d0
 1/0020        &                  isGerminated, isEmerged                                        AT d0
 1/0021                                                                                          AT d0
 1/0022                                                                                          AT d0
 1/0023   C includes variables only used inside 2dsoil                                           AT d0
 1/0024         Common /shtR_public/ RVR(NumNPD), AWUP(NumELD),PSISM,PSILT,EOR,                  AT d0
 1/0025        &                     YRL(NumNPD), RGCF(NumNPD),iFavRoot(NumNPD),                 AT d0
 1/0026        &                     PSIS(NumNPD), TS(NumNPD),COND(NumNPD),                      AT d0
 1/0027        &                     PDWR(NumNPD),                                               AT d0
 1/0028        &                     DRL(NumNPD),WUPM(NumNPD),                                   AT d0
 1/0029        &                     WUPN(NumNPD),WUPT(NumNPD),TPL,PPDRL(NumNPD),                AT d0
 1/0030        &                     ADWR(NumNPD), AWR(NumNPD), ADRL(NumNPD),RTWL,               AT d0
 1/0031        &                     RtMinWtPerUnitArea,Wl,Wa,Wr,Wb,ALPY,                        AT d0
 1/0032        &                     WidthE(NumEld),HeightE(NumEld),                             AT d0
 1/0033        &                  PILD,VMAX,vegsrc, potential_T,                                 AT d0
 1/0034        &                   potential_T_EO,                                               AT d0
 1/0035        &                  AWUPS_old, WUPMS, EORSCF,WUPDS, WUP2S,                         AT d0
 1/0036        &                 WUP0S, DPSI02,SCF, PSIST,PROPAR,                                AT d0
 1/0037        &                 VUP(NumNPD,2),FUP(NumNPD,2)                                     AT d0
 1/0038   c      end                                                                             AT d0
   0004         Double precision A,B,C,P,Sum                                                     AT d0
   0005         Character InString*132                                                           AT d0
   0006         Integer newjjj                                                                   AT d0
   0007   C  AD added RMass, RMassM, MRL into Public.ins 2011-08-01                              AT d0
   0008   C AD 12-2-2011 this code from MaizSim10.11 is based on Yakov Pachepsky's diffusion code AT d0
   0009                                                                                          AT d0
   0010         Dimension A(MBandD,NumNPD),B(NumNPD),F(NumNPD),DS(NumNPD),                       AT d0
   0011        &            Gc(NumNPD),Sc(NumNPD),Fc(NumNPD),                                    AT d0
   0012        &            MRL(NumNPD),RUTDEN_Y(NumNPD)                                         AT d0
D:\2DSOIL_Grape\Soil Source\root_diff_new.for(12) : warning 242 - Variable SC has been given a value but never used 
D:\2DSOIL_Grape\Soil Source\root_diff_new.for(12) : warning 197 - Variable MRL has been declared but not used 
D:\2DSOIL_Grape\Soil Source\root_diff_new.for(12) : warning 197 - Variable RUTDEN_Y has been declared but not used 
   0013         Common /RootM/  DMolx,DMolz,Vel,Ac(NumNPD),                                      AT d0
   0014        &                NLevel,dt,epsi,CourMax,lUpW,                                     AT d0
   0015        &                S(3,3),Wz(3),Wx(3),Ri(3),Ci(3),Bi(3),List(3),                    AT d0
   0016        &         VxROld(NumNPD),VzROld(NumNPD),                                          AT d0
   0017        &         VxR(NumNPD), VzR(NumNPD), hOld(NumNPD),tOld(NumNPD),                    AT d0
   0018        &         VxRH(NumNPD),VzRH(NumNPD),RMassOld(NumNPD),                             AT d0
   0019        &                Dispzz(NumNPD),Dispxx(NumNPD),Dispxz(NumNPD),                    AT d0
   0020        &                WeTab(3,2*NumElD)                                                AT d0
   0021         If (lInput.eq.0) goto 11                                                         AT d5
   0022                                                                                          AT d5
   0023         Open(40,file = VarietyFile, status = 'old',ERR = 10)                             AT d5
   0024                                                                                          AT 157
   0025         im=70                                                                            AT 157
   0026         il=0                                                                             AT 162
   0027   55       Read (40,'(A132)') InString                                                   AT 16d
   0028             if (InString(1:14).ne.'[RootDiff]') goto 55                                  AT 1cb
   0029         im=im+1                                                                          AT 1f1
   0030         il=il+1                                                                          AT 1f8
   0031         Read(40,*,ERR=10)                                                                AT 1ff
   0032         im=im+1                                                                          AT 236
   0033         il=il+1                                                                          AT 23d
   0034         Read(40,*,ERR=10)                                                                AT 244
   0035         im=im+1                                                                          AT 27b
   0036         il=il+1                                                                          AT 282
   0037         Read(40,*,ERR=10) epsi,lUpW,CourMax                                              AT 289
   0038         Nlevel=1                                                                         AT 34e
   0039         if(epsi.lt.0.999) NLevel=2                                                       AT 34e
   0040         im=im+1                                                                          AT 34e
   0041         il=il+1                                                                          AT 355
   0042         Read(40,*,ERR=10)                                                                AT 35c
   0043         im=im+1                                                                          AT 393
   0044         il=il+1                                                                          AT 39a
   0045         Read(40,*,ERR=10) DMolx,DMolz,Vel                                                AT 3a1
   0046         close(40)                                                                        AT 429
   0047                                                                                          AT 45e
   0048         Do n=1,NumNP                                                                     AT 45e
   0049           RMassOld(n)=RMassY(n)                                                          AT 48f
   0050           VxR(n)=0.0D0                                                                   AT 4e0
   0051           VxROld(n)=0.0D0                                                                AT 50a
   0052           VzROld(n)=VzR(n)                                                               AT 534
   0053         Enddo                                                                            AT 576
   0054         Movers(4)=1                                                                      AT 5b8
   0055         Return                                                                           AT 5b8
   0056   C                                                                                      AT 5bd
   0057   C  Routine calculations                                                                AT 5bd
   0058   11    Continue                                                                         AT 5bd
   0059                                                                                          AT 5d5
   0060                                                                                          AT 5d5
   0061   C  No Plant = No Root Activity                                                         AT 5d5
   0062         If(NShoot.eq.0) Return                                                           AT 5d5
   0063                                                                                          AT 61a
   0064                                                                                          AT 61a
   0065         t=Time                                                                           AT 61a
D:\2DSOIL_Grape\Soil Source\root_diff_new.for(65) : warning 242 - Variable T has been given a value but never used 
   0066         dt = Step                                                                        AT 61a
   0067           xMul=1.0D0                                                                     AT 61a
   0068           alf=1.0D0-epsi                                                                 AT 685
   0069           newjjj=MBand                                                                   AT 685
   0070   c                                                                                      AT 685
   0071           Do 13 n=1,NumNP                                                                AT 685
   0072             DS(n)=0.0D0                                                                  AT 6a0
   0073             Gc(n)=0.0D0                                                                  AT 6bb
   0074             Sc(n)=0.0D0                                                                  AT 6ce
   0075             B(n) =0.0D0                                                                  AT 6e1
   0076             Fc(n)=0.0D0                                                                  AT 6f4
   0077   c          Ac(i)=0.                                                                    AT 732
   0078            If(lOrt) B1(n)=RMassY(n)                                                      AT 732
   0079                                                                                          AT 7d0
   0080             If(epsi.lt.0.001D0) then                                                     AT 7d0
   0081               if(lOrt) newjjj = IADD(n)                                                  AT 7d0
   0082               A(newjjj,n)=0.0D0                                                          AT 7ee
   0083             Else                                                                         AT 824
   0084                                                                                          AT 824
   0085             Do 12 j=1,MBandD                                                             AT 824
   0086                 A(j,n)=0.0D0                                                             AT 840
   0087   12          Continue                                                                   AT 871
   0088             Endif                                                                        AT 889
   0089   13      Continue                                                                       AT 889
   0090   c                                                                                      AT 8bc
   0091   c        A loop to calculate geotropic velocity                                        AT 8bc
   0092   CDT     we are going to not use this as a first approximation.                         AT 8bc
   0093   c                                                                                      AT 8bc
   0094   c        Do n=1,NumNP                                                                  AT 8bc
   0095   c           VzR(n)=Vel*f1(hNew(n))*f2(Tmpr(n))                                         AT 8bc
   0096   c     &         *f3(RDenY(n)+RDenM(n))                                                 AT 8bc
   0097   C          VzR(i)=Vel*RGCF(i)                                                          AT 8bc
   0098   C        Enddo                                                                         AT 8bc
   0099   C                                                                                      AT 8bc
   0100   C  assign fluxes of root growth                                                        AT 8bc
   0101           Do n=1,NumNP                                                                   AT 8bc
   0102             Gc(n)=ADWR(n)/nodeArea(n)                                                    AT 8e0
   0103           Enddo                                                                          AT 94a
   0104   C                                                                                      AT 97b
   0105   C Assembling matrixes                                                                  AT 97b
   0106   C                                                                                      AT 97b
   0107           Do 21 Level=1,NLevel                                                           AT 97b
   0108             If(lUpW.eq.1) then                                                           AT 9eb
   0109               If(Level.eq.NLevel) then                                                   AT 9eb
   0110                  Do n=1,NumNP                                                            AT 9eb
   0111                   VxRH(n)=VxR(n)                                                         AT a1f
   0112                   VzRH(n)=VzR(n)                                                         AT a69
   0113                  Enddo                                                                   AT aab
   0114               Else                                                                       AT ae3
   0115                Do n=1,NumNP                                                              AT ae3
   0116                   VxRH(n)=VxROld(n)                                                      AT b0f
   0117                   VzRH(n)=VzROld(n)                                                      AT b59
   0118                  Enddo                                                                   AT b9b
   0119             Endif                                                                        AT c6b
   0120               Call RDisper(NumNP,Dispxx,Dispzz,Dispxz,DMolx,DMolz)                       AT c6b
   0121                                                                                          AT c6b
   0122               Call RWeFact(NumNP,NumEl,NumElD,x,y,KX,WeTab,VxRH,VzRH,                    AT c6b
   0123        &                    Dispxx,Dispzz,Dispxz)                                        AT c6b
   0124             Endif                                                                        AT cf8
   0125             If(Level.eq.NLevel) then                                                     AT cf8
   0126               do 14 n=1,NumNP                                                            AT cf8
   0127                 Ac(n)=-1                                                                 AT d1f
   0128   14          continue                                                                   AT d41
   0129             Endif                                                                        AT d74
   0130             Do 15 n=1,NumNP                                                              AT d74
   0131               F(n)=0.                                                                    AT d90
   0132               If(Level.eq.NLevel) DS(n)=0.                                               AT dc7
   0133   15        Continue                                                                     AT de2
   0134             NumSEl=0                                                                     AT dff
   0135             Do 19 n=1,NumEl                                                              AT e20
   0136               NUS=4                                                                      AT e40
   0137               If(KX(n,3).eq.KX(n,4)) NUS=3                                               AT e5a
   0138               Do 18 k=1,NUS-2                                                            AT ea9
   0139                 NumSEl=NumSEl+1                                                          AT ee0
   0140                 i=KX(n,1)                                                                AT ef6
   0141                 j=KX(n,k+1)                                                              AT f1c
   0142                 l=KX(n,k+2)                                                              AT f5d
   0143                 List(1)=i                                                                AT ffc
   0144                 List(2)=j                                                                AT ffc
   0145                 List(3)=l                                                                AT ffc
   0146                 Ci(1)=x(l)-x(j)                                                          AT ffc
   0147                 Ci(2)=x(i)-x(l)                                                          AT 1050
   0148                 Ci(3)=x(j)-x(i)                                                          AT 10cb
   0149                 Bi(1)=y(j)-y(l)                                                          AT 115e
   0150                 Bi(2)=y(l)-y(i)                                                          AT 11f1
   0151                 Bi(3)=y(i)-y(j)                                                          AT 1284
   0152                 AE=(Ci(3)*Bi(2)-Ci(2)*Bi(3))/2.                                          AT 13bb
   0153                 If(KAT.eq.1) xMul=2.*3.1416*(x(i)+x(j)+x(l))/3.                          AT 13bb
   0154                 FMul=xMul*AE/4.                                                          AT 1432
   0155                 GcE=(Gc(i)+Gc(j)+Gc(l))/3.                                               AT 1459
   0156                 Ec1=(Dispxx(i)+Dispxx(j)+Dispxx(l))/3.                                   AT 14b1
   0157                 Ec2=(Dispxz(i)+Dispxz(j)+Dispxz(l))/3.                                   AT 150f
   0158                 Ec3=(Dispzz(i)+Dispzz(j)+Dispzz(l))/3.                                   AT 1585
   0159                 AcE=(Ac(i)+Ac(j)+Ac(l))/3.                                               AT 15fb
   0160                 FcE=(Fc(i)+Fc(j)+Fc(l))/3.                                               AT 1669
   0161                 VxE=(VxR(i)+VxR(j)+VxR(l))/3.                                            AT 16c1
   0162                 VzE=(VzR(i)+VzR(j)+VzR(l))/3.                                            AT 172e
   0163                 SMul1=-1./AE/4.*xMul                                                     AT 17c6
   0164                 SMul2=AE/20.*xMul                                                        AT 17f1
   0165                 If(lUpW.eq.1) then                                                       AT 182c
   0166                   NS=NumSEl                                                              AT 182c
   0167                   W1=WeTab(1,NS)                                                         AT 184b
   0168                   W2=WeTab(2,NS)                                                         AT 187c
   0169                   W3=WeTab(3,NS)                                                         AT 18b2
   0170                   Wx(1)=                                                                 AT 18fa
   0171        &          2.*VxRH(i)*(W2-W3)+VxRH(j)*(W2-2.*W3)+VxRH(l)*(2.*W2-W3)               AT 18fa
   0172                   Wx(2)=                                                                 AT 19ca
   0173        &          VxRH(i)*(2.*W3-W1)+2.*VxRH(j)*(W3-W1)+VxRH(l)*(W3-2.*W1)               AT 19ca
   0174                   Wx(3)=                                                                 AT 1a9f
   0175        &          VxRH(i)*(W1-2.*W2)+VxRH(j)*(2.*W1-W2)+2.*VxRH(l)*(W1-W2)               AT 1a9f
   0176                   Wz(1)=                                                                 AT 1bac
   0177        &          2.*VzRH(i)*(W2-W3)+VzRH(j)*(W2-2.*W3)+VzRH(l)*(2.*W2-W3)               AT 1bac
   0178                   Wz(2)=                                                                 AT 1cc1
   0179        &          VzRH(i)*(2.*W3-W1)+2.*VzRH(j)*(W3-W1)+VzRH(l)*(W3-2.*W1)               AT 1cc1
   0180                   Wz(3)=                                                                 AT 1dd6
   0181        &          VzRH(i)*(W1-2.*W2)+VzRH(j)*(2.*W1-W2)+2.*VzRH(l)*(W1-W2)               AT 1dd6
   0182                 Endif                                                                    AT 1ebb
   0183               do 17 j1=1,3                                                               AT 1ebb
   0184                 i1=List(j1)                                                              AT 1edf
   0185                 F(i1)=F(i1)+FMul*(GcE+Gc(i1)/3.)                                         AT 1efd
   0186                 if(Level.eq.NLevel) DS(i1)=DS(i1)+FMul*(AcE+Ac(i1)/3.)                   AT 1f51
   0187                 do 16 j2=1,3                                                             AT 1fba
   0188                   i2=List(j2)                                                            AT 1fdf
   0189                   S(j1,j2)=SMul1*(Ec1*Bi(j1)*Bi(j2)+Ec3*Ci(j1)*Ci(j2)+                   AT 2006
   0190        &                         Ec2*(Bi(j1)*Ci(j2)+Ci(j1)*Bi(j2)))                      AT 2006
   0191                   S(j1,j2)=S(j1,j2)-(Bi(j2)/8.*(VxE+VxR(i1)/3.)+                         AT 2128
   0192        &                            Ci(j2)/8.*(VzE+VzR(i1)/3.))*xMul                     AT 2128
   0193                   if(lUpW.eq.1) S(j1,j2)=S(j1,j2)-xMul*                                  AT 2270
   0194        &                            (Bi(j2)/40.*Wx(j1)+Ci(j2)/40.*Wz(j1))                AT 2270
   0195                   ic=1                                                                   AT 235f
   0196                   if(i1.eq.i2) ic=2                                                      AT 236a
   0197                   S(j1,j2)=S(j1,j2)+SMul2*ic*(FcE+(Fc(i1)+Fc(i2))/3.)                    AT 2398
   0198                   if(Level.ne.NLevel) then                                               AT 2439
   0199                     B(i1)=B(i1)-alf*S(j1,j2)*RMassY(i2)                                  AT 2439
   0200                   else                                                                   AT 24d9
   0201                     If (lOrt) Then                                                       AT 250c
   0202                       call Find(i1,i2,kk,NumNp,MBandD,IAD,IADN)                          AT 250c
   0203                       ib=kk                                                              AT 254e
   0204                       Else                                                               AT 2561
   0205                        iB=MBand+i2-i1                                                    AT 2585
   0206                       Endif                                                              AT 2585
   0207                        A(iB,i1)=A(iB,i1)+epsi*S(j1,j2)                                   AT 2585
   0208                   endif                                                                  AT 25ff
   0209   16            continue                                                                 AT 25ff
   0210   17          continue                                                                   AT 2617
   0211   18          Continue                                                                   AT 262f
   0212   19        Continue                                                                     AT 264a
   0213             Do 20 i=1,NumNP                                                              AT 267d
   0214               If(Level.ne.NLevel) then                                                   AT 26bd
   0215                 B(i)=B(i)-alf*F(i)                                                       AT 26bd
   0216               Else                                                                       AT 2701
   0217                 if (lOrt) newjjj=IADD(i)                                                 AT 272c
   0218                 A(newjjj,i)=A(newjjj,i)+DS(i)/dt                                         AT 274b
   0219   c               A(MBand,i)=A(MBand,i)+DS(i)/dt                                         AT 27ad
   0220                 B(i)=B(i)+DS(i)/dt*RMassY(i)-epsi*F(i)                                   AT 27ad
   0221               Endif                                                                      AT 2830
   0222   20        Continue                                                                     AT 2830
   0223   21      Continue                                                                       AT 284b
   0224   C                                                                                      AT 289e
   0225   C  Solve the global matrix equation for transport                                      AT 289e
   0226   C                                                                                      AT 289e
   0227           If(epsi.lt.0.001) then                                                         AT 289e
   0228             Do 22 i=1,NumNP                                                              AT 289e
   0229             if (lOrt) newjjj = IADD(i)                                                   AT 28eb
   0230                B(i)=B(i)/A(newjjj,i)                                                     AT 290a
   0231   c            B(i)=B(i)/A(MBand,i)                                                      AT 2956
   0232   22        Continue                                                                     AT 2956
   0233                else if(lOrt) then                                                        AT 29b9
   0234   cccz                                                                                   AT 29b9
   0235   c             print*,time,',','Root Diff'                                              AT 29b9
   0236              call ILU(A,NumNP,MBandD,IAD,IADN,IADD,A1)                                   AT 29b9
   0237                call OrthoMin(A,B1,B,NumNP,MBandD,NumNPD,IAD,                             AT 2a02
   0238        &              IADN,IADD,A1,VRV,                                                  AT 2a02
   0239        &                RES,RQI,RQ,QQ,QI,RQIDOT,ECNVRG,RCNVRG,ACNVRG,4,                  AT 2a02
   0240        &                MNorth,MaxItO)                                                   AT 2a02
   0241           Else                                                                           AT 2bf5
   0242   C                                                                                      AT 2c0d
   0243   C  Solve the system of linear equations                                                AT 2c0d
   0244   C                                                                                      AT 2c0d
   0245             N1=NumNP-1                                                                   AT 2c0d
   0246             Do 212 k=1,N1                                                                AT 2c0d
   0247               P=1./A(MBand,k)                                                            AT 2c3f
   0248               kk=k+1                                                                     AT 2c72
   0249               kc=MBand                                                                   AT 2ca5
   0250               Do 211 i=kk,NumNP                                                          AT 2ca5
   0251                 kc=kc-1                                                                  AT 2cc0
   0252                 If(kc.le.0) goto 212                                                     AT 2cc7
   0253                 C=-P*A(kc,i)                                                             AT 2cdd
   0254                 A(kc,i)=C                                                                AT 2d23
   0255                 ii=kc+1                                                                  AT 2d43
   0256                 L=kc+MBand-1                                                             AT 2d6e
   0257                 Do 211 j=ii,L                                                            AT 2d6e
   0258                   jj=j+MBand-kc                                                          AT 2db4
   0259                   A(j,i)=A(j,i)+C*A(jj,k)                                                AT 2db4
   0260   211         Continue                                                                   AT 2e13
   0261   212       Continue                                                                     AT 2e4b
   0262             Do  214 i=2,NumNP                                                            AT 2e7d
   0263               jj=MBand+1-i                                                               AT 2ebf
   0264               ii=1                                                                       AT 2ebf
   0265               If(jj.le.0) then                                                           AT 2eca
   0266                 jj=1                                                                     AT 2ed6
   0267                 ii=i-MBand+1                                                             AT 2f03
   0268               Endif                                                                      AT 2f03
   0269               Sum=0.                                                                     AT 2f03
   0270               Do 213 j=jj,MBand-1                                                        AT 2f2e
   0271                 Sum=Sum+A(j,i)*B(ii)                                                     AT 2f50
   0272                 ii=ii+1                                                                  AT 2f9e
   0273   213         Continue                                                                   AT 2fa5
   0274               B(i)=B(i)+Sum                                                              AT 2fc2
   0275   214       Continue                                                                     AT 2fe8
   0276             B(NumNP)=B(NumNP)/A(MBand,NumNP)                                             AT 3024
   0277             Do 216 k=1,N1                                                                AT 3058
   0278               i=NumNP-k                                                                  AT 309d
   0279               jj=i                                                                       AT 309d
   0280               m=min0(2*MBand-1,MBand+k)                                                  AT 30d6
   0281               Sum=0.                                                                     AT 30d6
   0282               Do 215 j=MBand+1,m                                                         AT 30e9
   0283                 jj=jj+1                                                                  AT 3110
   0284                 Sum=Sum+A(j,i)*B(jj)                                                     AT 3117
   0285   215         Continue                                                                   AT 3165
   0286               B(i)=(B(i)-Sum)/A(MBand,i)                                                 AT 3180
   0287   216       Continue                                                                     AT 31dd
   0288           Endif                                                                          AT 3210
   0289   C                                                                                      AT 3210
   0290           Do i=1,NumNP                                                                   AT 3210
   0291             if(lOrt) B(i) = B1(i)                                                        AT 324c
   0292             if (B(i).lt.0) then                                                          AT 328e
   0293                    B(i)=0.0                                                              AT 32af
   0294                    iii=1                                                                 AT 32ca
D:\2DSOIL_Grape\Soil Source\root_diff_new.for(294) : warning 242 - Variable III has been given a value but never used 
   0295               endif                                                                      AT 32d5
   0296   CDT 10/10/11 using the max statement here was causing root system to lose mass. I changed it back.            AT 32e4
   0297             RMassY(i)=sngl(B(i))                                                         AT 32e4
   0298           Enddo                                                                          AT 331c
   0299   *                                                                                      AT 3339
   0300                                                                                          AT 3339
   0301   c calculate mature root mass, total root mass and rool lengths                         AT 3339
   0302   c set up for next step                                                                 AT 3339
   0303         Do i=1,NumNPD                                                                    AT 3339
   0304           RMean=(RMassY(i)+RMassOld(i))/2.0d0                                            AT 335f
   0305                                                                                          AT 33cd
D:\2DSOIL_Grape\Soil Source\root_diff_new.for(304) : warning 242 - Variable RMEAN has been given a value but never used 
   0306           RMassM(i)=RMassM(i)+ALPY*RMassY(i)*Step                                        AT 33cd
   0307           RMassY(i)=RMassY(i)*(1.0-ALPY*Step)                                            AT 3457
   0308           RDenM(i)=RMassM(i)/RTWL                                                        AT 34bd
   0309           RDenY(i)=RMassY(i)/RTWL                                                        AT 3511
   0310                                                                                          AT 3565
   0311           RMassOld(i)=RMassY(i)                                                          AT 3565
   0312                                                                                          AT 35af
   0313           VxROld(i)=VxR(i)                                                               AT 35af
   0314           VzROld(i)=VzR(i)                                                               AT 3607
   0315         Enddo                                                                            AT 3660
   0316                                                                                          AT 36a9
   0317         TotalRootWeight=0.0D0                                                            AT 36a9
   0318         do n=1,NumNP                                                                     AT 36a9
   0319             TotalRootWeight=TotalRootWeight                                              AT 36df
   0320        &      +nodeArea(n)*(RMassM(n)+RMassY(n))                                         AT 36df
   0321         enddo                                                                            AT 3764
   0322   *                                                                                      AT 377f
   0323         Return                                                                           AT 377f
   0324   10    Call errmes(im,il)                                                               AT 3784
   0325         Return                                                                           AT 3799
   0326         End                                                                              AT 48
   0327   *                                                                                      AT 0
   0328                                                                                          AT 48
   0329         Subroutine RDisper(NumNP,Dispxx,Dispzz,Dispxz,DMolx,DMolz)                       AT 48
   0330   C      Real xDist, yDist, Dist                                                         AT 48
   0331   CDT 11/2018 we probably don't need this subroutine. All control of the root movement will be  AT 48
   0332   C  done via carbon allocation, we won't be changing the disp coefficiencts based on soil props. AT 48
   0333   C basically, all this does now is assign values Dispxx and Dispyy                      AT 48
   0334   C we can keep it for now if we do want to adjust the values later in the future.       AT 48
   0335   C I have cleaned it up though.                                                         AT 48
   0336         Dimension                                                                        AT 48
   0337        &  Dispxx(NumNP),Dispzz(NumNP),Dispxz(NumNP)                                      AT 48
   0338                                                                                          AT c0
   0339         Do 11 i=1,NumNP                                                                  AT c0
   0340             Adjust=1.0                                                                   AT e8
   0341             Dispxx(i)=DMolx*Adjust                                                       AT f6
   0342             Dispzz(i)=DMolz*Adjust                                                       AT 11f
   0343             Dispxz(i)=0.                                                                 AT 144
   0344   11    continue                                                                         AT 15b
   0345         Return                                                                           AT 16d
   0346         End                                                                              AT aa
   0347   *                                                                                      AT 0
   0348         subroutine RWeFact(NumNP,NumEl,NumElD,x,y,KX,WeTab,VxH,VzH,Dispxx,               AT aa
   0349        &                  Dispzz,Dispxz)                                                 AT aa
   0350         Dimension x(NumNP),y(NumNP),KX(NumElD,4),VxH(NumNP),VzH(NumNP),                  AT aa
   0351        &          Dispxx(NumNP),Dispzz(NumNP),Dispxz(NumNP),                             AT aa
   0352        &          WeTab(3,2*NumElD),Beta(3),List(3)                                      AT aa
   0353         Integer e                                                                        AT 22b
   0354                                                                                          AT 22b
   0355   C AD 10/12/11 commented out the following line, because it causes Vel (geotrophic velocity) to make the denominator very small AT 22b
   0356   C      TanH(z)=(exp(z)-exp(-z))/(exp(z)+exp(-z))                                       AT 22b
   0357         NumSEl=0                                                                         AT 22b
   0358         Do 13 e=1,NumEl                                                                  AT 236
   0359           NCorn=4                                                                        AT 264
   0360           If(KX(e,3).eq.KX(e,4)) NCorn=3                                                 AT 26f
   0361           Do 12 n=1,NCorn-2                                                              AT 2c8
   0362             NumSEl=NumSEl+1                                                              AT 2f4
   0363             M1=KX(e,1)                                                                   AT 2fb
   0364             M2=KX(e,n+1)                                                                 AT 317
   0365             M3=KX(e,n+2)                                                                 AT 344
   0366             A=y(M2)-y(M1)                                                                AT 36f
   0367             B=x(M2)-x(M1)                                                                AT 395
   0368             Beta(1)=atan2(A,B)                                                           AT 3bb
   0369             A=y(M3)-y(M2)                                                                AT 3d3
   0370             B=x(M3)-x(M2)                                                                AT 403
   0371             Beta(2)=atan2(A,B)                                                           AT 423
   0372             A=y(M1)-y(M3)                                                                AT 43b
   0373             B=x(M1)-x(M3)                                                                AT 46b
   0374             Beta(3)=atan2(A,B)                                                           AT 48b
   0375             List(1)=M1                                                                   AT 4a3
   0376             List(2)=M2                                                                   AT 4b1
   0377             List(3)=M3                                                                   AT 4c1
   0378             Do 11 j=1,3                                                                  AT 4d1
   0379               k=j-1                                                                      AT 4e4
   0380               If(k.eq.0) k=3                                                             AT 4f4
   0381               WeTab(k,NumSEl)=0.                                                         AT 50b
   0382               M1=List(j)                                                                 AT 541
   0383               jp1=j+1                                                                    AT 559
   0384               If(j.eq.3) jp1=1                                                           AT 564
   0385               M2=List(jp1)                                                               AT 580
   0386               Vxx=(VxH(M1)+VxH(M2))/2.                                                   AT 598
   0387               Vzz=(VzH(M1)+VzH(M2))/2.                                                   AT 5cc
   0388               If(abs(Vxx).lt.1.e-30.and.abs(Vzz).lt.1.e-30) goto 11                      AT 5f8
   0389               BetaV=atan2(Vzz,Vxx)                                                       AT 635
   0390               Delta=abs(BetaV-Beta(j))                                                   AT 655
   0391               If(Delta.gt.0.314.and.abs(Delta-3.1416).gt.0.314) goto 11                  AT 683
   0392               ALeng=sqrt((x(M2)-x(M1))**2+(y(M2)-y(M1))**2)                              AT 6c0
   0393               CBeta=cos(Beta(j))                                                         AT 738
   0394               SBeta=sin(Beta(j))                                                         AT 765
   0395               Val=Vxx*CBeta+Vzz*SBeta      ! velocity along the edge                     AT 78a
   0396               VV=sqrt(Vxx*Vxx+Vzz*Vzz)                                                   AT 7ad
   0397               DLL=(Dispxx(M1)+Dispxx(M2))/2.                                             AT 7e9
   0398               DLT=(Dispxz(M1)+Dispxz(M2))/2.                                             AT 812
   0399               DTT=(Dispzz(M1)+Dispzz(M2))/2.                                             AT 83b
   0400               DAL=abs(DLL*CBeta*CBeta+2.0*CBeta*SBeta*DLT+DTT*SBeta*SBeta)               AT 864
   0401               Vel=VAL*ALeng                                                              AT 8c6
   0402               Disp=2.0*DAL                                                               AT 8d5
   0403               aa=11.                                                                     AT 8e8
   0404               If(Disp.gt.0.) aa=abs(Vel/Disp)                                            AT 8fb
   0405               If(Disp.lt.1.e-30.or.abs(Vel).lt.0.001*VV.or.abs(aa).gt.10.)               AT 930
   0406        &            then                                                                 AT 930
   0407                 If(abs(Vel).lt.0.001*VV) WeTab(k,NumSEl)=0.0                             AT 999
   0408                 If(Vel.gt.0.001*VV) WeTab(k,NumSEl)=1.0                                  AT 9ff
   0409                 If(Vel.lt.-0.001*VV) WeTab(k,NumSEl)=-1.0                                AT a57
   0410               Else                                                                       AT abd
   0411                 WeTab(k,NumSEl)=1.0/TanH(Vel/Disp)-Disp/Vel                              AT abd
   0412               Endif                                                                      AT b4e
   0413   11        Continue                                                                     AT b4e
   0414   12      Continue                                                                       AT b66
   0415   13    Continue                                                                         AT b81
   0416         Return                                                                           AT b9e
   0417         End                                                                              AT c27
   0418                                                                                          AT 0




End of Compilation - Clocked 0.01 seconds
